{
  "uid" : "83b6927e18b05a11",
  "name" : "修改生日",
  "fullName" : "test_cases.common.test_modify_personal_information.TestModifyPersonalInfomation#test_Modify_Birthday",
  "historyId" : "bbf530b084dc240b3907caba5e24fff1",
  "time" : {
    "start" : 1663748172621,
    "stop" : 1663748218223,
    "duration" : 45602
  },
  "status" : "broken",
  "statusMessage" : "selenium.common.exceptions.NoSuchElementException: Message: An element could not be located on the page using the given search parameters.\nStacktrace:\nNoSuchElementError: An element could not be located on the page using the given search parameters.\n    at AndroidUiautomator2Driver.findElOrEls (C:\\Users\\laixinhua\\AppData\\Local\\Programs\\Appium Server GUI\\resources\\app\\node_modules\\appium\\node_modules\\appium-android-driver\\lib\\commands\\find.js:75:11)\n    at processTicksAndRejections (internal/process/task_queues.js:85:5)",
  "statusTrace" : "self = <test_modify_personal_information.TestModifyPersonalInfomation object at 0x000001EF04517910>\napp_page = <appium.webdriver.webdriver.WebDriver (session=\"e956a7e7-18ac-4324-8de7-1b1ca387447e\")>\n\n    @allure.story(\"修改个人信息\")  # allure子模块名称\n    @allure.title(\"修改生日\")  # allure用例标题\n    @pytest.mark.flaky(reruns=2, reruns_delay=3)  # 失败重跑\n    def test_Modify_Birthday(self, app_page):\n        LoginPage(app_page).login('13538262412', '868385',app_page)\n        Role = RolePage(app_page).Random_Select_role(app_page)\n        if Role == \"展厅\":\n            ExhibitionHallHomepagePage(app_page).Click_Avatar()\n            LeftMenuBarPage(app_page).Click_head_portrait()\n            PersonalInformationPage(app_page).Modify_Birthday(app_page)\n        elif Role == \"公司\":\n            CompanyHomePage(app_page).Click_Avatar()\n            LeftMenuBarPage(app_page).Click_head_portrait()\n            PersonalInformationPage(app_page).Modify_Birthday(app_page)\n        elif Role == \"厂商\":\n            ManufacturerHomepagePage(app_page).Click_Avatar()\n            LeftMenuBarPage(app_page).Click_head_portrait()\n>           PersonalInformationPage(app_page).Modify_Birthday(app_page)\n\ntest_cases\\common\\test_modify_personal_information.py:119: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\npage_obj\\common\\personal_information_page.py:111: in Modify_Birthday\n    self.click_element(personal_information_lct.determine2)\ncommon\\basepage.py:97: in click_element\n    ele = self.find_element_wait_and_focus(locator,wait_ele,by,wait,requence,index)\ncommon\\basepage.py:81: in find_element_wait_and_focus\n    return self.driver.find_element(by,locator)\nvenv\\lib\\site-packages\\appium\\webdriver\\webdriver.py:414: in find_element\n    return self.execute(RemoteCommand.FIND_ELEMENT, {'using': by, 'value': value})['value']\nvenv\\lib\\site-packages\\selenium\\webdriver\\remote\\webdriver.py:425: in execute\n    self.error_handler.check_response(response)\nvenv\\lib\\site-packages\\appium\\webdriver\\errorhandler.py:30: in check_response\n    raise wde\nvenv\\lib\\site-packages\\appium\\webdriver\\errorhandler.py:26: in check_response\n    super().check_response(response)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nself = <appium.webdriver.errorhandler.MobileErrorHandler object at 0x000001EF04ABF100>\nresponse = {'status': 404, 'value': '{\"value\":{\"error\":\"no such element\",\"message\":\"An element could not be located on the page u...ver\\\\\\\\lib\\\\\\\\commands\\\\\\\\find.js:75:11)\\\\n    at processTicksAndRejections (internal/process/task_queues.js:85:5)\"}}'}\n\n    def check_response(self, response: Dict[str, Any]) -> None:\n        \"\"\"\n        Checks that a JSON response from the WebDriver does not have an error.\n    \n        :Args:\n         - response - The JSON response from the WebDriver server as a dictionary\n           object.\n    \n        :Raises: If the response contains an error message.\n        \"\"\"\n        status = response.get('status', None)\n        if not status or status == ErrorCode.SUCCESS:\n            return\n        value = None\n        message = response.get(\"message\", \"\")\n        screen: str = response.get(\"screen\", \"\")\n        stacktrace = None\n        if isinstance(status, int):\n            value_json = response.get('value', None)\n            if value_json and isinstance(value_json, str):\n                import json\n                try:\n                    value = json.loads(value_json)\n                    if len(value.keys()) == 1:\n                        value = value['value']\n                    status = value.get('error', None)\n                    if not status:\n                        status = value.get(\"status\", ErrorCode.UNKNOWN_ERROR)\n                        message = value.get(\"value\") or value.get(\"message\")\n                        if not isinstance(message, str):\n                            value = message\n                            message = message.get('message')\n                    else:\n                        message = value.get('message', None)\n                except ValueError:\n                    pass\n    \n        exception_class: Type[WebDriverException]\n        if status in ErrorCode.NO_SUCH_ELEMENT:\n            exception_class = NoSuchElementException\n        elif status in ErrorCode.NO_SUCH_FRAME:\n            exception_class = NoSuchFrameException\n        elif status in ErrorCode.NO_SUCH_SHADOW_ROOT:\n            exception_class = NoSuchShadowRootException\n        elif status in ErrorCode.NO_SUCH_WINDOW:\n            exception_class = NoSuchWindowException\n        elif status in ErrorCode.STALE_ELEMENT_REFERENCE:\n            exception_class = StaleElementReferenceException\n        elif status in ErrorCode.ELEMENT_NOT_VISIBLE:\n            exception_class = ElementNotVisibleException\n        elif status in ErrorCode.INVALID_ELEMENT_STATE:\n            exception_class = InvalidElementStateException\n        elif status in ErrorCode.INVALID_SELECTOR \\\n                or status in ErrorCode.INVALID_XPATH_SELECTOR \\\n                or status in ErrorCode.INVALID_XPATH_SELECTOR_RETURN_TYPER:\n            exception_class = InvalidSelectorException\n        elif status in ErrorCode.ELEMENT_IS_NOT_SELECTABLE:\n            exception_class = ElementNotSelectableException\n        elif status in ErrorCode.ELEMENT_NOT_INTERACTABLE:\n            exception_class = ElementNotInteractableException\n        elif status in ErrorCode.INVALID_COOKIE_DOMAIN:\n            exception_class = InvalidCookieDomainException\n        elif status in ErrorCode.UNABLE_TO_SET_COOKIE:\n            exception_class = UnableToSetCookieException\n        elif status in ErrorCode.TIMEOUT:\n            exception_class = TimeoutException\n        elif status in ErrorCode.SCRIPT_TIMEOUT:\n            exception_class = TimeoutException\n        elif status in ErrorCode.UNKNOWN_ERROR:\n            exception_class = WebDriverException\n        elif status in ErrorCode.UNEXPECTED_ALERT_OPEN:\n            exception_class = UnexpectedAlertPresentException\n        elif status in ErrorCode.NO_ALERT_OPEN:\n            exception_class = NoAlertPresentException\n        elif status in ErrorCode.IME_NOT_AVAILABLE:\n            exception_class = ImeNotAvailableException\n        elif status in ErrorCode.IME_ENGINE_ACTIVATION_FAILED:\n            exception_class = ImeActivationFailedException\n        elif status in ErrorCode.MOVE_TARGET_OUT_OF_BOUNDS:\n            exception_class = MoveTargetOutOfBoundsException\n        elif status in ErrorCode.JAVASCRIPT_ERROR:\n            exception_class = JavascriptException\n        elif status in ErrorCode.SESSION_NOT_CREATED:\n            exception_class = SessionNotCreatedException\n        elif status in ErrorCode.INVALID_ARGUMENT:\n            exception_class = InvalidArgumentException\n        elif status in ErrorCode.NO_SUCH_COOKIE:\n            exception_class = NoSuchCookieException\n        elif status in ErrorCode.UNABLE_TO_CAPTURE_SCREEN:\n            exception_class = ScreenshotException\n        elif status in ErrorCode.ELEMENT_CLICK_INTERCEPTED:\n            exception_class = ElementClickInterceptedException\n        elif status in ErrorCode.INSECURE_CERTIFICATE:\n            exception_class = InsecureCertificateException\n        elif status in ErrorCode.INVALID_COORDINATES:\n            exception_class = InvalidCoordinatesException\n        elif status in ErrorCode.INVALID_SESSION_ID:\n            exception_class = InvalidSessionIdException\n        elif status in ErrorCode.UNKNOWN_METHOD:\n            exception_class = UnknownMethodException\n        else:\n            exception_class = WebDriverException\n        if not value:\n            value = response['value']\n        if isinstance(value, str):\n            raise exception_class(value)\n        if message == \"\" and 'message' in value:\n            message = value['message']\n    \n        screen = None  # type: ignore[assignment]\n        if 'screen' in value:\n            screen = value['screen']\n    \n        stacktrace = None\n        st_value = value.get('stackTrace') or value.get('stacktrace')\n        if st_value:\n            if isinstance(st_value, str):\n                stacktrace = st_value.split('\\n')\n            else:\n                stacktrace = []\n                try:\n                    for frame in st_value:\n                        line = self._value_or_default(frame, 'lineNumber', '')\n                        file = self._value_or_default(frame, 'fileName', '<anonymous>')\n                        if line:\n                            file = \"%s:%s\" % (file, line)\n                        meth = self._value_or_default(frame, 'methodName', '<anonymous>')\n                        if 'className' in frame:\n                            meth = \"%s.%s\" % (frame['className'], meth)\n                        msg = \"    at %s (%s)\"\n                        msg = msg % (meth, file)\n                        stacktrace.append(msg)\n                except TypeError:\n                    pass\n        if exception_class == UnexpectedAlertPresentException:\n            alert_text = None\n            if 'data' in value:\n                alert_text = value['data'].get('text')\n            elif 'alert' in value:\n                alert_text = value['alert'].get('text')\n            raise exception_class(message, screen, stacktrace, alert_text)  # type: ignore[call-arg]  # mypy is not smart enough here\n>       raise exception_class(message, screen, stacktrace)\nE       selenium.common.exceptions.NoSuchElementException: Message: An element could not be located on the page using the given search parameters.\nE       Stacktrace:\nE       NoSuchElementError: An element could not be located on the page using the given search parameters.\nE           at AndroidUiautomator2Driver.findElOrEls (C:\\Users\\laixinhua\\AppData\\Local\\Programs\\Appium Server GUI\\resources\\app\\node_modules\\appium\\node_modules\\appium-android-driver\\lib\\commands\\find.js:75:11)\nE           at processTicksAndRejections (internal/process/task_queues.js:85:5)\n\nvenv\\lib\\site-packages\\selenium\\webdriver\\remote\\errorhandler.py:247: NoSuchElementException",
  "flaky" : false,
  "newFailed" : false,
  "newBroken" : false,
  "newPassed" : false,
  "retriesCount" : 0,
  "retriesStatusChange" : false,
  "beforeStages" : [ {
    "name" : "app_page",
    "time" : {
      "start" : 1663748162275,
      "stop" : 1663748172620,
      "duration" : 10345
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "stepsCount" : 0,
    "hasContent" : false
  } ],
  "testStage" : {
    "status" : "broken",
    "statusMessage" : "selenium.common.exceptions.NoSuchElementException: Message: An element could not be located on the page using the given search parameters.\nStacktrace:\nNoSuchElementError: An element could not be located on the page using the given search parameters.\n    at AndroidUiautomator2Driver.findElOrEls (C:\\Users\\laixinhua\\AppData\\Local\\Programs\\Appium Server GUI\\resources\\app\\node_modules\\appium\\node_modules\\appium-android-driver\\lib\\commands\\find.js:75:11)\n    at processTicksAndRejections (internal/process/task_queues.js:85:5)",
    "statusTrace" : "self = <test_modify_personal_information.TestModifyPersonalInfomation object at 0x000001EF04517910>\napp_page = <appium.webdriver.webdriver.WebDriver (session=\"e956a7e7-18ac-4324-8de7-1b1ca387447e\")>\n\n    @allure.story(\"修改个人信息\")  # allure子模块名称\n    @allure.title(\"修改生日\")  # allure用例标题\n    @pytest.mark.flaky(reruns=2, reruns_delay=3)  # 失败重跑\n    def test_Modify_Birthday(self, app_page):\n        LoginPage(app_page).login('13538262412', '868385',app_page)\n        Role = RolePage(app_page).Random_Select_role(app_page)\n        if Role == \"展厅\":\n            ExhibitionHallHomepagePage(app_page).Click_Avatar()\n            LeftMenuBarPage(app_page).Click_head_portrait()\n            PersonalInformationPage(app_page).Modify_Birthday(app_page)\n        elif Role == \"公司\":\n            CompanyHomePage(app_page).Click_Avatar()\n            LeftMenuBarPage(app_page).Click_head_portrait()\n            PersonalInformationPage(app_page).Modify_Birthday(app_page)\n        elif Role == \"厂商\":\n            ManufacturerHomepagePage(app_page).Click_Avatar()\n            LeftMenuBarPage(app_page).Click_head_portrait()\n>           PersonalInformationPage(app_page).Modify_Birthday(app_page)\n\ntest_cases\\common\\test_modify_personal_information.py:119: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\npage_obj\\common\\personal_information_page.py:111: in Modify_Birthday\n    self.click_element(personal_information_lct.determine2)\ncommon\\basepage.py:97: in click_element\n    ele = self.find_element_wait_and_focus(locator,wait_ele,by,wait,requence,index)\ncommon\\basepage.py:81: in find_element_wait_and_focus\n    return self.driver.find_element(by,locator)\nvenv\\lib\\site-packages\\appium\\webdriver\\webdriver.py:414: in find_element\n    return self.execute(RemoteCommand.FIND_ELEMENT, {'using': by, 'value': value})['value']\nvenv\\lib\\site-packages\\selenium\\webdriver\\remote\\webdriver.py:425: in execute\n    self.error_handler.check_response(response)\nvenv\\lib\\site-packages\\appium\\webdriver\\errorhandler.py:30: in check_response\n    raise wde\nvenv\\lib\\site-packages\\appium\\webdriver\\errorhandler.py:26: in check_response\n    super().check_response(response)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nself = <appium.webdriver.errorhandler.MobileErrorHandler object at 0x000001EF04ABF100>\nresponse = {'status': 404, 'value': '{\"value\":{\"error\":\"no such element\",\"message\":\"An element could not be located on the page u...ver\\\\\\\\lib\\\\\\\\commands\\\\\\\\find.js:75:11)\\\\n    at processTicksAndRejections (internal/process/task_queues.js:85:5)\"}}'}\n\n    def check_response(self, response: Dict[str, Any]) -> None:\n        \"\"\"\n        Checks that a JSON response from the WebDriver does not have an error.\n    \n        :Args:\n         - response - The JSON response from the WebDriver server as a dictionary\n           object.\n    \n        :Raises: If the response contains an error message.\n        \"\"\"\n        status = response.get('status', None)\n        if not status or status == ErrorCode.SUCCESS:\n            return\n        value = None\n        message = response.get(\"message\", \"\")\n        screen: str = response.get(\"screen\", \"\")\n        stacktrace = None\n        if isinstance(status, int):\n            value_json = response.get('value', None)\n            if value_json and isinstance(value_json, str):\n                import json\n                try:\n                    value = json.loads(value_json)\n                    if len(value.keys()) == 1:\n                        value = value['value']\n                    status = value.get('error', None)\n                    if not status:\n                        status = value.get(\"status\", ErrorCode.UNKNOWN_ERROR)\n                        message = value.get(\"value\") or value.get(\"message\")\n                        if not isinstance(message, str):\n                            value = message\n                            message = message.get('message')\n                    else:\n                        message = value.get('message', None)\n                except ValueError:\n                    pass\n    \n        exception_class: Type[WebDriverException]\n        if status in ErrorCode.NO_SUCH_ELEMENT:\n            exception_class = NoSuchElementException\n        elif status in ErrorCode.NO_SUCH_FRAME:\n            exception_class = NoSuchFrameException\n        elif status in ErrorCode.NO_SUCH_SHADOW_ROOT:\n            exception_class = NoSuchShadowRootException\n        elif status in ErrorCode.NO_SUCH_WINDOW:\n            exception_class = NoSuchWindowException\n        elif status in ErrorCode.STALE_ELEMENT_REFERENCE:\n            exception_class = StaleElementReferenceException\n        elif status in ErrorCode.ELEMENT_NOT_VISIBLE:\n            exception_class = ElementNotVisibleException\n        elif status in ErrorCode.INVALID_ELEMENT_STATE:\n            exception_class = InvalidElementStateException\n        elif status in ErrorCode.INVALID_SELECTOR \\\n                or status in ErrorCode.INVALID_XPATH_SELECTOR \\\n                or status in ErrorCode.INVALID_XPATH_SELECTOR_RETURN_TYPER:\n            exception_class = InvalidSelectorException\n        elif status in ErrorCode.ELEMENT_IS_NOT_SELECTABLE:\n            exception_class = ElementNotSelectableException\n        elif status in ErrorCode.ELEMENT_NOT_INTERACTABLE:\n            exception_class = ElementNotInteractableException\n        elif status in ErrorCode.INVALID_COOKIE_DOMAIN:\n            exception_class = InvalidCookieDomainException\n        elif status in ErrorCode.UNABLE_TO_SET_COOKIE:\n            exception_class = UnableToSetCookieException\n        elif status in ErrorCode.TIMEOUT:\n            exception_class = TimeoutException\n        elif status in ErrorCode.SCRIPT_TIMEOUT:\n            exception_class = TimeoutException\n        elif status in ErrorCode.UNKNOWN_ERROR:\n            exception_class = WebDriverException\n        elif status in ErrorCode.UNEXPECTED_ALERT_OPEN:\n            exception_class = UnexpectedAlertPresentException\n        elif status in ErrorCode.NO_ALERT_OPEN:\n            exception_class = NoAlertPresentException\n        elif status in ErrorCode.IME_NOT_AVAILABLE:\n            exception_class = ImeNotAvailableException\n        elif status in ErrorCode.IME_ENGINE_ACTIVATION_FAILED:\n            exception_class = ImeActivationFailedException\n        elif status in ErrorCode.MOVE_TARGET_OUT_OF_BOUNDS:\n            exception_class = MoveTargetOutOfBoundsException\n        elif status in ErrorCode.JAVASCRIPT_ERROR:\n            exception_class = JavascriptException\n        elif status in ErrorCode.SESSION_NOT_CREATED:\n            exception_class = SessionNotCreatedException\n        elif status in ErrorCode.INVALID_ARGUMENT:\n            exception_class = InvalidArgumentException\n        elif status in ErrorCode.NO_SUCH_COOKIE:\n            exception_class = NoSuchCookieException\n        elif status in ErrorCode.UNABLE_TO_CAPTURE_SCREEN:\n            exception_class = ScreenshotException\n        elif status in ErrorCode.ELEMENT_CLICK_INTERCEPTED:\n            exception_class = ElementClickInterceptedException\n        elif status in ErrorCode.INSECURE_CERTIFICATE:\n            exception_class = InsecureCertificateException\n        elif status in ErrorCode.INVALID_COORDINATES:\n            exception_class = InvalidCoordinatesException\n        elif status in ErrorCode.INVALID_SESSION_ID:\n            exception_class = InvalidSessionIdException\n        elif status in ErrorCode.UNKNOWN_METHOD:\n            exception_class = UnknownMethodException\n        else:\n            exception_class = WebDriverException\n        if not value:\n            value = response['value']\n        if isinstance(value, str):\n            raise exception_class(value)\n        if message == \"\" and 'message' in value:\n            message = value['message']\n    \n        screen = None  # type: ignore[assignment]\n        if 'screen' in value:\n            screen = value['screen']\n    \n        stacktrace = None\n        st_value = value.get('stackTrace') or value.get('stacktrace')\n        if st_value:\n            if isinstance(st_value, str):\n                stacktrace = st_value.split('\\n')\n            else:\n                stacktrace = []\n                try:\n                    for frame in st_value:\n                        line = self._value_or_default(frame, 'lineNumber', '')\n                        file = self._value_or_default(frame, 'fileName', '<anonymous>')\n                        if line:\n                            file = \"%s:%s\" % (file, line)\n                        meth = self._value_or_default(frame, 'methodName', '<anonymous>')\n                        if 'className' in frame:\n                            meth = \"%s.%s\" % (frame['className'], meth)\n                        msg = \"    at %s (%s)\"\n                        msg = msg % (meth, file)\n                        stacktrace.append(msg)\n                except TypeError:\n                    pass\n        if exception_class == UnexpectedAlertPresentException:\n            alert_text = None\n            if 'data' in value:\n                alert_text = value['data'].get('text')\n            elif 'alert' in value:\n                alert_text = value['alert'].get('text')\n            raise exception_class(message, screen, stacktrace, alert_text)  # type: ignore[call-arg]  # mypy is not smart enough here\n>       raise exception_class(message, screen, stacktrace)\nE       selenium.common.exceptions.NoSuchElementException: Message: An element could not be located on the page using the given search parameters.\nE       Stacktrace:\nE       NoSuchElementError: An element could not be located on the page using the given search parameters.\nE           at AndroidUiautomator2Driver.findElOrEls (C:\\Users\\laixinhua\\AppData\\Local\\Programs\\Appium Server GUI\\resources\\app\\node_modules\\appium\\node_modules\\appium-android-driver\\lib\\commands\\find.js:75:11)\nE           at processTicksAndRejections (internal/process/task_queues.js:85:5)\n\nvenv\\lib\\site-packages\\selenium\\webdriver\\remote\\errorhandler.py:247: NoSuchElementException",
    "steps" : [ {
      "name" : "点击同意",
      "time" : {
        "start" : 1663748172621,
        "stop" : 1663748172621,
        "duration" : 0
      },
      "status" : "passed",
      "steps" : [ ],
      "attachments" : [ ],
      "parameters" : [ ],
      "attachmentsCount" : 0,
      "shouldDisplayMessage" : false,
      "stepsCount" : 0,
      "hasContent" : false
    }, {
      "name" : "输入账号：13538262412",
      "time" : {
        "start" : 1663748174236,
        "stop" : 1663748174236,
        "duration" : 0
      },
      "status" : "passed",
      "steps" : [ ],
      "attachments" : [ ],
      "parameters" : [ ],
      "attachmentsCount" : 0,
      "shouldDisplayMessage" : false,
      "stepsCount" : 0,
      "hasContent" : false
    }, {
      "name" : "输入验证码：868385",
      "time" : {
        "start" : 1663748177570,
        "stop" : 1663748177570,
        "duration" : 0
      },
      "status" : "passed",
      "steps" : [ ],
      "attachments" : [ ],
      "parameters" : [ ],
      "attachmentsCount" : 0,
      "shouldDisplayMessage" : false,
      "stepsCount" : 0,
      "hasContent" : false
    }, {
      "name" : "勾选我同意并阅读《用户服务协议》与《隐私政策》",
      "time" : {
        "start" : 1663748179241,
        "stop" : 1663748179241,
        "duration" : 0
      },
      "status" : "passed",
      "steps" : [ ],
      "attachments" : [ ],
      "parameters" : [ ],
      "attachmentsCount" : 0,
      "shouldDisplayMessage" : false,
      "stepsCount" : 0,
      "hasContent" : false
    }, {
      "name" : "点击登录",
      "time" : {
        "start" : 1663748179846,
        "stop" : 1663748179846,
        "duration" : 0
      },
      "status" : "passed",
      "steps" : [ ],
      "attachments" : [ ],
      "parameters" : [ ],
      "attachmentsCount" : 0,
      "shouldDisplayMessage" : false,
      "stepsCount" : 0,
      "hasContent" : false
    }, {
      "name" : "选择厂商角色",
      "time" : {
        "start" : 1663748180661,
        "stop" : 1663748180661,
        "duration" : 0
      },
      "status" : "passed",
      "steps" : [ ],
      "attachments" : [ ],
      "parameters" : [ ],
      "attachmentsCount" : 0,
      "shouldDisplayMessage" : false,
      "stepsCount" : 0,
      "hasContent" : false
    }, {
      "name" : "点击登录按钮",
      "time" : {
        "start" : 1663748181748,
        "stop" : 1663748181748,
        "duration" : 0
      },
      "status" : "passed",
      "steps" : [ ],
      "attachments" : [ ],
      "parameters" : [ ],
      "attachmentsCount" : 0,
      "shouldDisplayMessage" : false,
      "stepsCount" : 0,
      "hasContent" : false
    }, {
      "name" : "点击头像",
      "time" : {
        "start" : 1663748182729,
        "stop" : 1663748182731,
        "duration" : 2
      },
      "status" : "passed",
      "steps" : [ ],
      "attachments" : [ ],
      "parameters" : [ ],
      "attachmentsCount" : 0,
      "shouldDisplayMessage" : false,
      "stepsCount" : 0,
      "hasContent" : false
    }, {
      "name" : "点击头像",
      "time" : {
        "start" : 1663748186159,
        "stop" : 1663748186159,
        "duration" : 0
      },
      "status" : "passed",
      "steps" : [ ],
      "attachments" : [ ],
      "parameters" : [ ],
      "attachmentsCount" : 0,
      "shouldDisplayMessage" : false,
      "stepsCount" : 0,
      "hasContent" : false
    }, {
      "name" : "点击生日",
      "time" : {
        "start" : 1663748187248,
        "stop" : 1663748187248,
        "duration" : 0
      },
      "status" : "passed",
      "steps" : [ ],
      "attachments" : [ ],
      "parameters" : [ ],
      "attachmentsCount" : 0,
      "shouldDisplayMessage" : false,
      "stepsCount" : 0,
      "hasContent" : false
    }, {
      "name" : "点击确定",
      "time" : {
        "start" : 1663748188113,
        "stop" : 1663748188113,
        "duration" : 0
      },
      "status" : "passed",
      "steps" : [ ],
      "attachments" : [ ],
      "parameters" : [ ],
      "attachmentsCount" : 0,
      "shouldDisplayMessage" : false,
      "stepsCount" : 0,
      "hasContent" : false
    }, {
      "name" : "添加失败截图",
      "time" : {
        "start" : 1663748218261,
        "stop" : 1663748218612,
        "duration" : 351
      },
      "status" : "passed",
      "steps" : [ ],
      "attachments" : [ {
        "uid" : "ee4db01a9bd18306",
        "name" : "失败截图",
        "source" : "ee4db01a9bd18306.png",
        "type" : "image/png",
        "size" : 92551
      } ],
      "parameters" : [ ],
      "attachmentsCount" : 1,
      "shouldDisplayMessage" : false,
      "stepsCount" : 0,
      "hasContent" : true
    } ],
    "attachments" : [ {
      "uid" : "55e7f307779da09f",
      "name" : "log",
      "source" : "55e7f307779da09f.txt",
      "type" : "text/plain",
      "size" : 148514
    } ],
    "parameters" : [ ],
    "attachmentsCount" : 2,
    "shouldDisplayMessage" : true,
    "stepsCount" : 12,
    "hasContent" : true
  },
  "afterStages" : [ {
    "name" : "app_page::0",
    "time" : {
      "start" : 1663748218612,
      "stop" : 1663748219499,
      "duration" : 887
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "stepsCount" : 0,
    "hasContent" : false
  } ],
  "labels" : [ {
    "name" : "feature",
    "value" : "个人信息模块"
  }, {
    "name" : "story",
    "value" : "修改个人信息"
  }, {
    "name" : "tag",
    "value" : "flaky(reruns=2, reruns_delay=3)"
  }, {
    "name" : "parentSuite",
    "value" : "test_cases.common"
  }, {
    "name" : "suite",
    "value" : "test_modify_personal_information"
  }, {
    "name" : "subSuite",
    "value" : "TestModifyPersonalInfomation"
  }, {
    "name" : "host",
    "value" : "DESKTOP-04R5F8L"
  }, {
    "name" : "thread",
    "value" : "17508-MainThread"
  }, {
    "name" : "framework",
    "value" : "pytest"
  }, {
    "name" : "language",
    "value" : "cpython3"
  }, {
    "name" : "package",
    "value" : "test_cases.common.test_modify_personal_information"
  }, {
    "name" : "resultFormat",
    "value" : "allure2"
  } ],
  "parameters" : [ ],
  "links" : [ ],
  "hidden" : true,
  "retry" : true,
  "extra" : {
    "categories" : [ ],
    "tags" : [ "flaky(reruns=2, reruns_delay=3)" ]
  },
  "source" : "83b6927e18b05a11.json",
  "parameterValues" : [ ]
}